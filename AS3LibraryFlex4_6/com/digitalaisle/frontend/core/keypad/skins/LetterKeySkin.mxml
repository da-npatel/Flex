<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21" alpha.disabled="0.5">
    
    <!-- host component -->
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
           
			/* Define the skin elements that should not be colorized. 
            For button, the graphics are colorized but the label is not. */
            static private const exclusions:Array = ["textGroup"];
            
            /** 
             * @private
             */     
            override public function get colorizeExclusions():Array {return exclusions;}
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {	
				useChromeColor = true;
                super.initializationComplete();
            }  
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                var cr:Number = getStyle("cornerRadius");

                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
            private var cornerRadius:Number = 2;
        ]]>        
    </fx:Script>

	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates"/>
		<s:State name="down" stateGroups="overStates" />
		<s:State name="disabled" />
	</s:states>
	
	<!-- The background gradient in greyscale, using lighter values on overstates (stateGroup) -->
	<s:Rect left="1" right="1" top="1" bottom="1" radiusX="4" radiusY="4">
		<s:filters>
			<s:DropShadowFilter id="dsfBg" alpha="0.5" blurX="0" blurY="0" distance="1" strength="1" strength.down="0"  />
		</s:filters>
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry id="ge1" color="#939393" color.overStates="#ffffff" ratio="0.5"/> 
				<s:GradientEntry id="ge2" color="#939393" color.overStates="#ffffff" ratio="0.5"/>
				<s:GradientEntry id="ge3" color="#939393" color.overStates="#ffffff" ratio="0.5"/>
				<s:GradientEntry id="ge4" color="#939393" color.overStates="#ffffff" ratio="0.5"/>
			</s:LinearGradient>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="#ffffff" caps="none" weight="1" joints="miter" miterLimit="4"/>
		</s:stroke>
	</s:Rect>
	
	<!-- Label with a shadow applied to it. In a group for colorization exclusion -->
	<s:Group id="textGroup" verticalCenter="0" horizontalCenter="0">
		<s:filters>
			<s:DropShadowFilter alpha="0.1" blurX="0" blurY="0" distance="1" />
		</s:filters>
		<s:Label id="labelDisplay"
				 textAlign="center"
				 verticalAlign="middle"
				 maxDisplayedLines="1"
				 horizontalCenter="0" verticalCenter="1">
		</s:Label>
		
	</s:Group>
    
</s:SparkSkin>
